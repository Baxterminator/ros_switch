#!/bin/bash

get_script_dir() {
    SOURCE=$1
    while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
      DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
      SOURCE=$(readlink "$SOURCE")
      [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
    echo $DIR
}

replace_in_str() {
  echo ${1//"$2"/"$3"}
}

format_msg() {
  local msg=$(replace_in_str "$1" "%20" " ")
  msg=$(replace_in_str "$msg" "%21" "\n")
  msg=$(replace_in_str "$msg" "%22" "\t")
  echo "$msg"
}

# Get the script directory
DIR="$(get_script_dir ${BASH_SOURCE[0]})"

# Call the python script
output=$(cd $DIR; python3 rosswitch_py.py "$@")
read -r -a arr <<< $output
lvl=${arr[0]}
msg=$(format_msg ${arr[1]})

# Act upon the output
if [[ "$lvl" = "error" ]]; then
  RED='\033[0;31m'
  NC='\033[0m' # No Color
  echo -e "${RED}Error: $msg${NC}"
elif [[ "$lvl" = "load" ]]; then
  a=1
elif [[ "$lvl" = "txt" ]]; then
  echo -e "$msg"
elif [[ ! -z "$output" ]]; then
  echo "$output"
fi