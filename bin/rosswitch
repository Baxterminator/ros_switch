#!/bin/bash

get_script_dir() {
    SOURCE=$1
    while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
      DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
      SOURCE=$(readlink "$SOURCE")
      [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
    echo $DIR
}

replace_in_str() {
  echo ${1//"$2"/"$3"}
}

format_msg() {
  local msg=$(replace_in_str "$1" "%20" " ")
  msg=$(replace_in_str "$msg" "%21" "\n")
  msg=$(replace_in_str "$msg" "%22" "\t")
  echo "$msg"
}

is_debug() {
  for k in $@; do
    if [[ "$k" == "-d" ]]; then 
      echo 1
      return
    fi
  done
  echo 0
}
debug=$(is_debug $@)

# Get the script directory and call the Python script
DIR="$(get_script_dir ${BASH_SOURCE[0]})"
output=$(cd $DIR; python3 .rosswitch_py.py "$@")
read -r -a arr <<< $output

# Get length of the array and test for odd values so that we get
# a even value for array length (to keep key-value pairs)
let arr_length=${#arr[@]}
if [ "$(( arr_length % 2 ))" -ne 0 ]; 
then
  arr_length=$arr_length-1
fi

# Iterate over the key values
RED='\033[0;31m'
NC='\033[0m' # No Color
for (( i=0; i<${arr_length}; i=i+2 ));
do
  key=${arr[i]}
  val=$(format_msg ${arr[i+1]})

  # Act upon the output
  if [[ "$key" = "load" ]]; then
    source ${val}
  elif [[ "$key" = "txt" ]]; then # Just a message
    echo -e "$val"
  else # Else, just throw the output
    echo -e "${RED}Error: Unrecognized key \"${key}\""
    echo -e "\tWith val: ${val}${NC}"
  fi
done
